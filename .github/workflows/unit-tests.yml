name: Unit Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]

jobs:
  dotnet-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [
          { tfm: net9.0, version: '9.0.x' },
        ]
    env:
      BUILD_CONFIG: Release
      SOLUTION: ReactReduxTodo.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet.version }}

    - name: Run tests
      run: dotnet test $SOLUTION --configuration $BUILD_CONFIG --framework ${{ matrix.dotnet.tfm }} --logger trx --results-directory "TestResults-${{ matrix.dotnet.version }}" /p:CollectCoverage=true /maxcpucount:1

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dotnet-test-results-${{ matrix.dotnet.version }}
        path: TestResults-${{ matrix.dotnet.version }}

    - name: Publish test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: dotnet-test-results-${{ matrix.dotnet.version }}
        path: "**/*.trx"
        reporter: dotnet-trx
        fail-on-error: true

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ClientApp

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './ClientApp/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run frontend tests
      run: npm test
