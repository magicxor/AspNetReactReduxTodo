name: Unit Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]

jobs:
  dotnet-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [
          { tfm: net8.0, version: '8.0.x' },
        ]
    env:
      BUILD_CONFIG: Release
      SOLUTION: ReactReduxTodo.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet.version }}

    - name: Run tests
      run: |
        dotnet tool install --global Microsoft.CodeCoverage.Console

        dotnet test $SOLUTION -s .runsettings --configuration $BUILD_CONFIG --framework ${{ matrix.dotnet.tfm }} --logger trx --results-directory "TestResults" /maxcpucount:1 /p:CollectCoverage=true /p:CoverletOutputFormat="cobertura" /p:CoverletOutput="./TestResults/coverage" --verbosity normal

        MERGED_REPORT_PATH="./FinalCoverageReport/coverage.cobertura.xml"

        echo "Creating directory: $(dirname "$MERGED_REPORT_PATH")"
        mkdir -p "$(dirname "$MERGED_REPORT_PATH")"

        echo "Searching for coverage files..."
        find . -path '*/TestResults/coverage.cobertura.xml' -print0 | xargs -0 codecoverage merge -o "$MERGED_REPORT_PATH" -f cobertura

        if [ $? -eq 0 ]; then
          echo "Coverage files successfully merged into: $MERGED_REPORT_PATH"
        else
          echo "Error during coverage file merge."
          exit 1
        fi

    - name: Create Test Coverage Badge
      uses: gaelgirodon/ci-badges-action@v1
      with:
        gist-id: d65b6e3ef87f1cee894fe9aa6032ce81
        token: ${{ secrets.GIST_AUTH_TOKEN }}

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ClientApp

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './ClientApp/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run frontend tests
      run: npm test
